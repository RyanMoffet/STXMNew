% % use an inputdlg to get new constants for the width of the asymmetric
% % gaussian function, which is simulated by a function, linear dependent on
% % energy
% stringfor_m=['Sigma* - resonances are best fitted by asymmetric Gaussian functions.' char(10) ...
%     'The mathematical formula is as follows: ' char(10) char(10) '      I = H*Exp[-0.5*((E-P)/(F/c))^2] '  char(10) char(10) ...
%     'Where E is the independent variable energy (in eV), P is the position of the peak, '...
%     'c is a constant defined by c = 2*Sqrt[ln[4]] = 2.355, H is the maximum value of the '...
%     'function and F is the full width at half maximum (FWHM).' char(10) 'For the lineshape '...
%     'to be asymmetric F depends linearly upon energy. It is described by: F = E*m+b' char(10) ...
%     'Where E is again the energy and m and b are constants. At the Carbon K-edge, spectra are '...
%     'best fitted, when m = 0.575 and b = -164.75 eV. [source: NEXAFS Spectroscopy by Joachim Stoehr]'...
%     char(10) 'By unchecking the box you implied, that your spectrum was taken at a different '...
%     'energy than the Carbon K-edge! Therefore new values should be assigned to m and b, guaranteeing '...
%     'the best possible fit for your spectrum.' char(10) 'In case you unchecked the box by accident '...
%     'or out of curiosity, please close this dialog and check the box again.' char(10) ...
%     char(10) 'Enter new value for m:'];
% prompt={stringfor_m,...
%         'Enter new value for b [eV]:'};
% name='New constants for linear FWHM';
% numlines=1;
% defaultanswer={'0.575','-164.75'};


% % % get region of spectrum, you want to use for normalization
% % limstring=['Please identify the pre - edge of the spectrum. The average of the ' char(10) ...
% %     'pre - edge will be calculated and the spectrum is subtracted by this value.' char(10) ...
% %     'In case you don''t want the spectrum to be altered in this way, please' char(10) ...
% %     'push the "cancel" - button.' char(10) ...
% %     char(10) 'Enter the lower limit [eV]:'];
% % prompt={limstring,'Enter the upper limit [eV]:'};
% % name='Pre - edge region of Spectrum';
% % numlines=1;
% % pre=inputdlg(prompt,name,numlines);


% % % use a question-dialog to make the user choose which version of the
% % % spectrum shall be used in the fitting process
% % qstring=['You have created a filtered version of the spectrum.' char(10) ...
% %     'You have now the choice to either fit the filtered spectrum or the ' char(10) ...
% %     'raw spectrum. Please choose which spectrum you want to fit!'];
% % 
% % if ~isempty(spec)
% %     if ~isempty(specsmoothed)
% %         button = questdlg(qstring,'Choose raw or filtered spectrum','raw','filtered','raw')
% %         if strcmp(button,'raw')
% %             fitspec=spec;
% %         else fitspec=specsmoothed;
% %         end
% %     else fitspec=spec;
% %     end
% % end

%                         matfilesize=size(strentries);
%                         for i=1:matfilesize(1,1)
%                             if i==1 str = [strentries{i,1} ' ; '];
%                             else str = [str strentries{i,1} ' ; '];
%                             end
%                         end
%                         str=['The .mat - file you loaded, seems to be a struct. ' char(10) ...
%                             'Here is a list of the variables loaded into the workspace: ' char(10) ...
%                            char(10) str char(10) char(10)...
%                             'If the spectrum is part of this list, please enter its name ' char(10) ...
%                             'in this dialog box, so it can be loaded after all!'];
%                         var=inputdlg(str);
